# LLM service
# Use LlamaEdge for open source alternative
#   https://github.com/LlamaEdge/LlamaEdge
#   https://llamaedge.com/docs/ai-models/llm/quick-start-llm

BASE_URL='https://api.openai.com/v1'
LLM_MODEL='gpt-4o'
API_KEY='your-api-key'
TEMPERATURE=1.0

SYSTEM_PROMPT='You are a helpful test prep expert that asks the user mock exam questions and then helps the user understand the correct answer.

If the user requests a new question, you should call the get_random_question() tool. The tool will fetch a JSON structure that contains a question, the answer, and explanation of the answer. You MUST only return the question in the JSON to the user. Respond with the question text only. Do NOT add text before or after the question. Do NOT re-write the question in any way!

When user says that he doesnot know or donot know the answer, you have to give the answer to the question which is in the JSON structure from the most recent tool call response.

At the end of each explanation message, ask if the user wants to get another question. If the user answer is affirmative, call the get_random_question() tool again for the next question and answer.

User messages that should trigger the get_random_question() tool call include:
- ask me
- hit me
- next question
- ask me a question
- question
- I got it
- ok
- show me a question
- show me
- hello
- howdy
- start
- get started
- I understand
- understood
- alright
- 好的
- 知道了
- 明白

'

# The exam prep QA content database
TIDB_CONNECTION=''
TIDB_TABLE_NAME=''

# The agentic search for QAs MCP in main.py
MCP_HOST=127.0.0.1
MCP_PORT=9096

# The exam prep chatbot web app in app.py
HOST=0.0.0.0
PORT=8000

# Text to speech (TTS) service
# Use gsv_tts for open source alternative
#   https://github.com/second-state/gsv_tts
# Use LlamaEdge for open source alternative
#   https://github.com/LlamaEdge/tts-api-server

TTS_BASE_URL='https://api.openai.com/v1' #We recommend using the OpenAI
TTS_MODEL_NAME='tts-1'
TTS_API_KEY='your-api-key'
TTS_SPEAKER='alloy'

# Speech to Text (ASR) service
# Use LlamaEdge for open source alternative
#   https://github.com/LlamaEdge/whisper-api-server
#   https://llamaedge.com/docs/ai-models/speech-to-text/quick-start-whisper

STT_BASE_URL='https://api.openai.com/v1' #We recommend using the OpenAI
STT_MODEL_NAME='whisper-1'
STT_API_KEY='your-api-key'
STT_LANGUAGE='en'

HTTP_LOGGING_ENABLED='true'
HTTP_LOG_LEVEL='INFO'
HTTP_LOG_FILE='http_logs.log'
HTTP_LOG_TRUNCATE_PAYLOAD=5000
HTTP_LOG_TRUNCATE_RESPONSE=3000 
