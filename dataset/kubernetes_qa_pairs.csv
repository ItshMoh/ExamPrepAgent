question,answer,topic,type,difficulty
What are the two main components of a Kubernetes cluster?,A Kubernetes cluster consists of a control plane and worker nodes.,architecture,conceptual,beginner
What is the role of a worker node in a Kubernetes cluster?,Worker nodes host the Pods that run the application workloads.,architecture,conceptual,beginner
What is the purpose of the Kubernetes control plane?,The control plane manages the worker nodes and Pods in the cluster.,architecture,conceptual,beginner
What is kube-apiserver and why is it crucial?,"kube-apiserver is the Kubernetes API server, the front-end for the control plane, exposing the Kubernetes API.",control plane,conceptual,intermediate
Explain the role of etcd in a Kubernetes cluster.,etcd is a highly available key-value store that serves as the backing store for all cluster data.,control plane,conceptual,intermediate
What is the function of the kube-scheduler?,"The kube-scheduler selects a node for newly created Pods to run on, considering various factors like resource requirements and constraints.",control plane,conceptual,intermediate
Describe the kube-controller-manager and its responsibilities.,"The kube-controller-manager runs various controllers that manage cluster resources and respond to events, such as the Node controller and Job controller.",control plane,conceptual,intermediate
What is the purpose of the cloud-controller-manager?,"It provides cloud-specific control logic, linking the cluster to the cloud provider's API.",control plane,conceptual,intermediate
What is the role of kubelet on a worker node?,kubelet ensures that containers defined in PodSpecs are running and healthy on the node.,node components,conceptual,intermediate
Explain the function of kube-proxy and when it might not be needed.,kube-proxy is a network proxy implementing the Kubernetes Service concept; it's optional if a network plugin provides equivalent functionality.,node components,conceptual,intermediate
What is a Container Runtime Interface (CRI) and why is it important?,"CRI allows Kubernetes to interact with various container runtimes like containerd and CRI-O, providing interoperability.",node components,conceptual,intermediate
What are Kubernetes Addons and where are their resources typically located?,Addons provide cluster-level features using Kubernetes resources and reside in the kube-system namespace.,addons,conceptual,intermediate
Why is Cluster DNS considered essential in a Kubernetes cluster?,"Cluster DNS provides DNS records for Kubernetes Services, enabling easy name resolution within the cluster.",addons,conceptual,intermediate
What is the purpose of a Network Plugin in Kubernetes?,Network plugins handle IP address allocation to Pods and enable inter-Pod communication.,networking,conceptual,intermediate
Describe a scenario where high availability for the control plane is crucial.,"In production environments, a highly available control plane ensures continued operation even if one control plane component fails.",high availability,scenario,intermediate
How can you ensure high availability of etcd?,By deploying etcd across multiple machines using a replication strategy.,high availability,practical,intermediate
What are some factors considered by the kube-scheduler when selecting a node for a Pod?,"Resource requirements, hardware/software constraints, affinity/anti-affinity, data locality, and deadlines.",scheduling,conceptual,intermediate
Explain the difference between a Deployment and a ReplicaSet.,Deployments manage ReplicaSets; they provide declarative updates and rollouts.,workloads,conceptual,intermediate
How would you horizontally scale a Deployment to increase the number of Pods?,Use kubectl scale deployment <deployment-name> --replicas=<new-replica-count>.,operations,practical,intermediate
What is a Kubernetes Service and how does it provide access to Pods?,"A Service provides a stable IP address and DNS name for a set of Pods, abstracting away the underlying Pod IP changes.",networking,conceptual,intermediate
What is the purpose of a Namespace in Kubernetes?,Namespaces provide a way to logically divide a cluster into multiple virtual clusters for better organization and resource isolation.,namespaces,conceptual,beginner
Explain the concept of Role-Based Access Control (RBAC) in Kubernetes.,RBAC allows fine-grained control over access to cluster resources by defining roles and assigning them to users or groups.,security,conceptual,intermediate
Describe a strategy to back up etcd data.,"Regularly snapshot and backup etcd data to a remote, durable storage location.",backup and recovery,practical,intermediate
How can you monitor the resource utilization of your Pods?,"Use tools like kubectl top pods, monitoring dashboards (like Prometheus/Grafana), or cloud provider monitoring tools.",monitoring,practical,intermediate
What are the different types of Kubernetes controllers within the kube-controller-manager?,"Examples include Node controller, Job controller, EndpointSlice controller, and ServiceAccount controller.",control plane,conceptual,intermediate
How does Kubernetes ensure high availability of applications?,"Through features like Deployments, ReplicaSets, and StatefulSets, which manage multiple pod replicas across different nodes.",high availability,conceptual,intermediate
Explain the concept of a DaemonSet in Kubernetes.,A DaemonSet ensures that every node in a cluster runs at least one Pod.,workloads,conceptual,intermediate
Discuss the advantages of using a container runtime like containerd or CRI-O.,"They offer better performance, security, and ease of management compared to running containers directly.",container runtime,conceptual,advanced
How would you troubleshoot a Pod that is consistently failing to start?,"Check the Pod logs using kubectl logs, examine the Pod's events, and verify resource requests and limits.",troubleshooting,practical,advanced
What is a Kubernetes Node?,"A Kubernetes Node is a worker machine in a cluster, either physical or virtual, that runs Pods.  It hosts the kubelet, container runtime, and kube-proxy.",architecture,conceptual,beginner
What are the core components running on a Kubernetes Node?,"The kubelet, a container runtime (like Docker or containerd), and kube-proxy.",architecture,factual,beginner
How does a Node register with the Kubernetes control plane?,"Primarily through self-registration by the kubelet (default), or manually via kubectl.",operations,factual,intermediate
What is the significance of the `--register-node` flag for the kubelet?,It controls whether the kubelet automatically registers the node with the API server.  The default is true (self-registration).,configuration,factual,intermediate
Explain the importance of Node name uniqueness in Kubernetes.,Kubernetes assumes a Node with the same name has the same state and attributes.  Changing a Node without renaming it can lead to inconsistencies.,architecture,conceptual,intermediate
What happens if you try to create a Node object with a name that is already in use?,"The creation will likely fail, as Node names must be unique within the cluster.",operations,practical,intermediate
How does Kubernetes determine if a Node is healthy?,The control plane checks if the kubelet has registered and if all necessary services are running on the node.,health,conceptual,intermediate
What is the `kubectl cordon` command used for?,"To mark a Node as unschedulable, preventing new Pods from being scheduled but allowing existing ones to continue running.",operations,practical,intermediate
How can you add labels to a Node?,"During self-registration using the `--node-labels` kubelet flag, or manually using `kubectl edit node <node-name>`.",configuration,practical,intermediate
What is the purpose of Node taints?,To prevent Pods without matching tolerations from scheduling onto a Node.,scheduling,conceptual,intermediate
What is the role of the `kube-proxy` component on a Node?,"It implements the Kubernetes Service concept, enabling communication between Pods.",networking,conceptual,beginner
Describe the Node's self-registration process with the API server.,"The kubelet, with the `--register-node=true` flag (default), authenticates with the API server using a kubeconfig file and registers itself, providing information about the node.",operations,descriptive,intermediate
What are the different ways to specify IP addresses for a node during self-registration?,"Using the `--node-ip` flag, specifying one address per address family. If omitted, the kubelet uses the node's default IPv4 or IPv6 address.",networking,factual,intermediate
How often does the kubelet post its node status to the API server?,This is configurable via the `--node-status-update-frequency` flag.  It represents the node's heartbeat frequency.,configuration,factual,intermediate
What happens when a Node becomes unreachable?,"The node controller marks the Node's Ready condition as Unknown, and eventually initiates API-initiated eviction of Pods from the node.",health,conceptual,intermediate
What is the purpose of Node heartbeats?,To monitor node availability and trigger actions when failures are detected.  This happens through Node status updates and Lease objects.,health,conceptual,intermediate
What is the role of the Node controller?,"It manages various aspects of Nodes, including CIDR assignment, keeping the node list up-to-date, and monitoring node health.",control_plane,conceptual,intermediate
How does the Node controller handle unhealthy nodes in a cloud environment?,"It checks with the cloud provider to see if the VM is still available; if not, it deletes the node from its list.",control_plane,conceptual,intermediate
What information is contained in a Node's status?,"Addresses, conditions (like Ready), capacity and allocatable resources, and info.",monitoring,factual,intermediate
How do you view a Node's status and details?,Using the `kubectl describe node <node-name>` command.,operations,practical,beginner
What are the two forms of node heartbeats?,Updates to the .status of a Node and Lease objects within the kube-node-lease namespace.,health,factual,intermediate
Explain the concept of API-initiated eviction.,"When a node becomes unreachable, the node controller eventually evicts Pods running on that node to prevent data loss and application disruption.",health,conceptual,intermediate
How can you manually create a Node object?,By setting the kubelet flag `--register-node=false` and using `kubectl create -f <node-manifest.yaml>`.,operations,practical,intermediate
What is the effect of adding node-role labels to a Node?,"It allows for more granular control over scheduling Pods based on Node roles (e.g., master, worker).",scheduling,conceptual,intermediate
How can you control Pod scheduling based on Node labels?,By using node selectors in Pod specifications to match labels on Nodes.,scheduling,conceptual,intermediate
What happens to DaemonSet Pods when a node is marked unschedulable?,"They tolerate being on unschedulable Nodes, as they typically provide node-local services.",workloads,conceptual,intermediate
What is a valid Node object name?,A valid DNS subdomain name.,naming,factual,beginner
How does the `--node-monitor-period` flag affect the node controller?,It configures how often the node controller checks the state of each node. The default is 5 seconds.,configuration,factual,advanced
Describe a scenario where you would want to re-register a node.,"When significant Node configuration changes are made, such as adding new labels, to ensure consistency and proper Pod scheduling.",operations,scenario,advanced
"What is a container, and why are they important in Kubernetes?","A container packages an application with its dependencies, ensuring consistent behavior across environments.  Kubernetes uses containers as the building blocks for deploying and managing applications.",containers,conceptual,beginner
What is a container image?,"A container image is a read-only template that contains everything needed to run an application: code, runtime, libraries, and settings.",containers,conceptual,beginner
Why are containers considered immutable?,"Containers are immutable to ensure consistency and predictability.  Changes are made by creating a new image, not modifying a running container.",containers,conceptual,beginner
What is a Kubernetes Pod?,A Pod is the smallest deployable unit in Kubernetes. It represents a running process and can contain one or more containers.,workloads,conceptual,beginner
What is the relationship between containers and Pods in Kubernetes?,Pods group one or more containers that are co-located and co-scheduled on the same node.,workloads,conceptual,beginner
What is a Container Runtime Interface (CRI)?,The CRI is an interface that allows Kubernetes to interact with different container runtimes.,containers,conceptual,intermediate
Name three examples of container runtimes supported by Kubernetes.,"containerd, CRI-O, and other CRI implementations.",containers,factual,intermediate
What is a RuntimeClass in Kubernetes?,A RuntimeClass allows you to specify a particular container runtime and its configuration for a Pod.,containers,conceptual,intermediate
How can you ensure that a Pod uses a specific container runtime?,By specifying a RuntimeClass in the Pod's definition.,containers,practical,intermediate
What are the benefits of using containers for application deployment?,"Improved portability, consistency, scalability, and easier management.",containers,conceptual,beginner
Explain the concept of statelessness in the context of containers.,"Stateless containers don't store persistent data within the container itself; any data is stored externally (e.g., using persistent volumes).",containers,conceptual,intermediate
How do you handle changes to a containerized application?,"Create a new image with the changes and deploy it, replacing the old container.",containers,practical,intermediate
What is the purpose of container lifecycle hooks?,They allow you to execute commands before or after a container starts or stops.,containers,conceptual,intermediate
How does Kubernetes ensure that containers run consistently across different nodes?,By using container images and specifying dependencies within those images.,containers,conceptual,intermediate
Describe a scenario where using multiple container runtimes within a single cluster would be beneficial.,"Running different workloads with specific runtime requirements (e.g., one needing a particular security feature supported by a specific runtime).",containers,scenario,advanced
What are some potential challenges associated with managing a large number of containers?,"Resource contention, monitoring complexity, and ensuring consistent resource allocation.",containers,conceptual,advanced
How does Kubernetes handle container failures?,"Through its self-healing mechanisms, it restarts or replaces failed containers.",operations,conceptual,intermediate
What is the role of a container runtime in Kubernetes?,It's responsible for managing the execution and lifecycle of containers within the Kubernetes environment.,containers,conceptual,intermediate
What is a Kubernetes Deployment?,A Deployment manages and updates a set of Pods.,workloads,conceptual,beginner
What is a Kubernetes Service?,A Service provides a stable IP address and DNS name for a set of Pods.,networking,conceptual,beginner
What is a Kubernetes Namespace?,A Namespace is a way to logically separate resources within a Kubernetes cluster.,namespaces,conceptual,beginner
What is RBAC in Kubernetes?,Role-Based Access Control; it manages access to Kubernetes resources.,security,conceptual,intermediate
How can you limit resource usage for a Pod?,By setting resource requests and limits in the Pod's specification.,resource_management,practical,intermediate
Explain the concept of persistent volumes in Kubernetes.,Persistent Volumes provide persistent storage that can be attached to Pods.,storage,conceptual,intermediate
What is a Kubernetes ConfigMap?,A ConfigMap allows you to store configuration data as key-value pairs and make it available to Pods.,configuration,conceptual,intermediate
What is a Kubernetes Secret?,A Secret stores sensitive information such as passwords and API keys.,security,conceptual,intermediate
How does Kubernetes networking work?,Kubernetes uses a virtual network to connect Pods and Services.,networking,conceptual,intermediate
Describe a scenario where you would use a Kubernetes DaemonSet.,"To deploy a process that needs to run on every node in the cluster, such as a logging agent.",workloads,scenario,advanced
What is the difference between a Kubernetes Deployment and a StatefulSet?,"Deployments manage stateless applications, while StatefulSets manage stateful applications that require persistent storage and stable network identities.",workloads,conceptual,advanced
What is the smallest deployable unit in Kubernetes?,A Pod is the smallest deployable unit in Kubernetes.,workloads,conceptual,beginner
What is a Kubernetes workload?,"A workload represents an application running on Kubernetes, encompassing one or more Pods.",workloads,conceptual,beginner
What happens to Pods when a node fails?,Kubernetes considers node failure a final state; you must create new Pods to recover.,workloads,conceptual,beginner
Name three built-in Kubernetes workload resources.,"Deployment, ReplicaSet, and StatefulSet are three built-in workload resources.",workloads,factual,beginner
What is the purpose of a Deployment in Kubernetes?,"A Deployment manages a stateless application, ensuring the desired number of Pods are running.",workloads,conceptual,intermediate
When would you use a StatefulSet instead of a Deployment?,Use a StatefulSet for stateful applications where Pods need persistent storage and unique identities.,workloads,conceptual,intermediate
Explain the purpose of a DaemonSet.,"A DaemonSet ensures that a Pod runs on every node in the cluster, providing node-local functionality.",workloads,conceptual,intermediate
What is the difference between a Job and a CronJob?,A Job runs a task once; a CronJob runs the same Job repeatedly according to a schedule.,workloads,conceptual,intermediate
How can you extend Kubernetes with custom workload behavior?,Use a Custom Resource Definition (CRD) to add third-party workload resources.,extensibility,conceptual,advanced
What is the role of garbage collection in Kubernetes?,Garbage collection removes objects from the cluster after their owning resource is deleted.,resource management,conceptual,intermediate
How does the 'time-to-live after finished' controller work for Jobs?,It automatically removes completed Jobs after a specified time.,resource management,conceptual,intermediate
What is the purpose of a Kubernetes Service?,A Service provides a stable IP address and DNS name for a set of Pods.,networking,conceptual,beginner
What is an Ingress in Kubernetes?,"An Ingress is a Kubernetes resource that manages external access to services, typically for web applications.",networking,conceptual,intermediate
"What is a ReplicaSet, and how does it relate to Deployments?",A ReplicaSet manages a set of Pods; Deployments use ReplicaSets to manage their desired state.,workloads,conceptual,intermediate
What is a PersistentVolume in Kubernetes and how it is related to StatefulSets?,A PersistentVolume provides persistent storage that can be used by Pods in a StatefulSet to retain data.,storage,conceptual,intermediate
Describe a scenario where you would use a DaemonSet.,Use a DaemonSet to run a logging agent or a monitoring agent on each node in the cluster.,workloads,practical,intermediate
How can you ensure high availability of your application using Kubernetes?,Use Deployments with multiple replicas and a Service to distribute traffic across healthy Pods.,high availability,practical,intermediate
Explain the concept of 'rolling updates' in Kubernetes.,Rolling updates allow you to update your application without downtime by gradually replacing old Pods with new ones.,deployments,conceptual,intermediate
What is the role of a Kubernetes Controller?,A controller continuously monitors the state of the cluster and ensures that the desired state is maintained.,architecture,conceptual,intermediate
How does Kubernetes handle scaling of applications?,Kubernetes uses ReplicaSets and Deployments to manage the scaling of applications by adjusting the number of Pods.,scaling,conceptual,intermediate
What are the benefits of using Kubernetes for deploying applications?,"Benefits include automated deployment, scaling, and self-healing, improved resource utilization, and portability.",benefits,conceptual,beginner
What is a Container?,A container is a standardized unit of software that packages code and all its dependencies.,containers,conceptual,beginner
Explain the concept of a Kubernetes Node.,A node is a worker machine in the Kubernetes cluster where Pods are scheduled and run.,architecture,conceptual,beginner
What is a Kubernetes Namespace?,A Namespace is a way to logically partition the cluster into isolated environments.,namespaces,conceptual,intermediate
What is RBAC in Kubernetes and why is it important?,Role-Based Access Control (RBAC) provides granular control over access to Kubernetes resources.,security,conceptual,intermediate
How can you troubleshoot a pod that is in a 'CrashLoopBackOff' state?,"Check the pod logs for errors, verify resource limits, and investigate potential application issues.",troubleshooting,practical,intermediate
Explain the difference between a Deployment and a ReplicationController.,"Deployments are a more advanced and feature-rich version of ReplicationControllers, offering functionalities such as rolling updates and rollbacks.",workloads,conceptual,intermediate
Describe how you would create a simple Deployment to deploy a web application.,"You would create a Deployment YAML file specifying the image, replicas, and other configuration details, then apply it using kubectl.",operations,practical,intermediate
How can you monitor the health of your Pods and Deployments in Kubernetes?,Use Kubernetes monitoring tools like Prometheus and Grafana to collect and visualize metrics and logs.,monitoring,practical,advanced
What is a Kubernetes Pod and what is its smallest constituent?,A Pod is the smallest deployable unit in Kubernetes.  The smallest constituent is a container.,pods,conceptual,beginner
Describe the relationship between containers and Pods.,"A Pod contains one or more containers, sharing network and storage resources. They are co-located and co-scheduled.",pods,conceptual,beginner
What are init containers and when are they used?,"Init containers run before application containers in a Pod, typically for setup tasks like configuring databases or downloading dependencies.",pods,conceptual,intermediate
What are ephemeral containers and their purpose?,Ephemeral containers are temporary containers added to a running Pod for debugging or diagnostic purposes.,pods,conceptual,intermediate
Why is the 'one-container-per-Pod' model the most common Kubernetes use case?,"It simplifies management; Kubernetes treats each Pod as a unit, making it easier to manage than individual containers.",pods,conceptual,beginner
When should you use multiple containers within a single Pod?,Only when the containers are tightly coupled and need to share resources; this is a relatively advanced use case.,pods,conceptual,intermediate
How does Kubernetes achieve replication for resilience or capacity?,"By using multiple Pods managed by a workload resource like Deployment, not by placing multiple containers in a single Pod.",pods,conceptual,intermediate
What command is used to create a Pod from a YAML file?,kubectl apply -f <filename.yaml>,pods,practical,beginner
Should you generally create Pods directly or use workload resources?,"Use workload resources like Deployments, Jobs, or StatefulSets; Pods are usually managed indirectly.",pods,conceptual,intermediate
What are some examples of workload resources that manage Pods?,"Deployments, StatefulSets, and DaemonSets.",workloads,conceptual,beginner
What is a PodTemplate and where is it used?,A PodTemplate is a specification for creating Pods; it's used within workload resources like Deployments and Jobs.,pods,conceptual,intermediate
How do controllers handle Pod failures?,"They detect failures (e.g., node failure), create replacement Pods, and schedule them on healthy nodes.",pods,conceptual,intermediate
What are the two kinds of shared resources Pods natively provide?,Networking and storage.,pods,conceptual,beginner
Explain the ephemerality of Pods.,Pods are designed to be relatively short-lived; they're terminated when their tasks are done or resources are needed elsewhere.,pods,conceptual,intermediate
What are the naming restrictions for Pods?,"Pod names must be valid DNS subdomain values, ideally following the more restrictive rules for a DNS label for compatibility.",pods,conceptual,intermediate
How do you specify the operating system for a Pod?,Using the `.spec.os.name` field in the Pod specification (linux or windows).,pods,practical,intermediate
"In Kubernetes v1.33, how does `.spec.os.name` affect node selection?",It doesn't directly affect node selection;  `nodeSelector` based on the `kubernetes.io/os` label should be used for OS-based node selection.,pods,conceptual,advanced
What is the role of the kubelet regarding Pod templates and updates?,"The kubelet doesn't directly manage Pod template details; this is handled by controllers, abstracting away those details.",pods,conceptual,advanced
How does modifying a pod template in a Deployment affect existing Pods?,"It doesn't directly affect existing Pods; the controller creates new Pods based on the updated template, eventually replacing the old ones.",deployments,conceptual,intermediate
What is the purpose of a `restartPolicy` in a Pod specification?,"It defines how Kubernetes restarts containers within a Pod; common options are `Always`, `OnFailure`, and `Never`.",pods,conceptual,intermediate
What is the difference between restarting a container and restarting a Pod?,Restarting a container restarts the process inside; restarting a Pod creates a completely new Pod instance.,pods,conceptual,intermediate
How can you inject environment variables into a Pod?,By defining them within the container specification in the Pod's YAML definition.,pods,practical,intermediate
What is a container runtime and why is it necessary for Pods?,A container runtime (like Docker or containerd) executes containers; it's necessary for Kubernetes nodes to run Pods.,containers,conceptual,beginner
What does co-location and co-scheduling mean in the context of Pods?,Containers within a Pod are always scheduled to run on the same node simultaneously.,pods,conceptual,beginner
How does Kubernetes manage the scaling of applications?,"Through workload resources (like Deployments) that manage multiple Pods, allowing for horizontal scaling.",workloads,conceptual,intermediate
Explain the concept of a controller in Kubernetes.,"A controller is a control loop that manages a set of Pods ensuring the desired state is maintained (e.g., handling replication, updates, and failures).",controllers,conceptual,intermediate
What is a StatefulSet and when would you use it?,A StatefulSet is a controller that manages stateful applications that require persistent storage and stable network identities.,statefulsets,conceptual,intermediate
What is a DaemonSet and its primary use case?,A DaemonSet ensures that a particular Pod is running on every node in the cluster; often used for system daemons or monitoring agents.,daemonsets,conceptual,intermediate
Explain the concept of a 'node' in Kubernetes.,A node is a worker machine in a Kubernetes cluster where Pods are scheduled to run.,cluster,conceptual,beginner
How does a nodeSelector work and what is its purpose?,"A `nodeSelector` is used to restrict Pod scheduling to nodes with specific labels, enabling control over node placement based on resource availability or other criteria.",scheduling,conceptual,intermediate
What is the purpose of a Kubernetes Service?,"A Kubernetes Service provides a stable IP address and DNS name for a group of Pods, enabling clients to access the service regardless of Pod changes.",services,conceptual,beginner
How do Pods communicate within a Kubernetes cluster?,"Pods communicate directly with each other using the pod network, without needing proxies or NAT, unless intentionally segmented.",networking,conceptual,beginner
Explain the role of kube-proxy in Kubernetes networking.,"Kube-proxy is the default service proxy in Kubernetes. It monitors Services and EndpointSlices, routing traffic to backend Pods.",networking,conceptual,intermediate
"What is a CNI plugin, and how does it relate to Kubernetes?",A CNI (Container Network Interface) plugin is software that handles pod network namespace setup.  Most container runtimes on Linux use CNIs to interact with the pod network.,networking,conceptual,intermediate
How does Kubernetes ensure that a Service remains accessible even if its backing Pods change?,Kubernetes uses EndpointSlices to track the currently healthy Pods backing a Service. The service proxy updates routing information accordingly.,services,conceptual,intermediate
Describe the difference between a ClusterIP and a LoadBalancer Service type.,"ClusterIP exposes the service internally within the cluster, while LoadBalancer exposes it externally using cloud provider load balancers.",services,conceptual,intermediate
What is the purpose of the Ingress API in Kubernetes?,"Ingress allows you to expose services externally to clients outside the cluster, often using more sophisticated routing rules than a LoadBalancer Service.",networking,conceptual,intermediate
What is the Gateway API and how does it relate to Ingress?,"The Gateway API is a newer, more powerful and flexible alternative to Ingress, offering more advanced traffic routing capabilities.",networking,conceptual,intermediate
How can you control network traffic between Pods using Kubernetes?,NetworkPolicies allow you to define rules to control traffic flow between pods and the outside world.,networking,conceptual,intermediate
"What are EndpointSlices, and why are they important for scalability?","EndpointSlices efficiently provide information about the pods backing a service, enabling the service to scale to handle large numbers of backends.",services,conceptual,intermediate
Explain the concept of 'pod network' in Kubernetes.,"The pod network handles communication between pods, ensuring they can communicate directly regardless of node location.",networking,conceptual,beginner
How do containers within the same Pod communicate?,Containers in the same Pod share a network namespace and can communicate using localhost.,pods,conceptual,beginner
What is the significance of a unique cluster-wide IP address for each Pod?,This allows for direct communication between pods regardless of their location within the cluster.,pods,conceptual,beginner
How does Kubernetes differ from older container systems in terms of inter-host container connectivity?,"Older systems required explicit links or port mappings, while Kubernetes automatically provides connectivity between pods on different nodes.",networking,comparative,intermediate
What is the role of `Service Internal Traffic Policy`?,It allows you to control whether intra-node communication between pods uses the cluster network or remains within the node.,networking,conceptual,intermediate
Can you explain the concept of Topology Aware Routing in Kubernetes?,"It prioritizes network traffic within the same zone, improving performance and reliability.",networking,conceptual,intermediate
What are the benefits of using Topology Aware Routing?,"Improved reliability, performance (reduced latency), and potentially lower costs.",networking,conceptual,intermediate
How does Kubernetes handle IPv4 and IPv6 networking?,"It supports single-stack IPv4, single-stack IPv6, and dual-stack configurations.",networking,conceptual,intermediate
What is the purpose of an Ingress Controller?,An Ingress Controller is required to make Ingress resources functional. It handles routing based on Ingress rules.,networking,conceptual,intermediate
Name three common Ingress controllers.,"This requires external research beyond the provided text, but common examples include Nginx Ingress Controller, Traefik, and Istio.",networking,knowledge,advanced
Explain a scenario where NetworkPolicy would be beneficial.,"To isolate sensitive applications from less sensitive ones, or to restrict access to specific pods from external networks.",security,scenario,intermediate
What happens if a pod network implementation doesn't support NetworkPolicy?,"The NetworkPolicy API will still exist, but its rules won't be enforced.",networking,conceptual,intermediate
Describe a situation where using Service Internal Traffic Policy would improve performance.,"When two pods frequently communicate on the same node, avoiding the cluster network reduces latency.",networking,scenario,intermediate
How can you expose a service to external clients using only the Kubernetes Service API?,By using the `type: LoadBalancer` option if supported by the cloud provider.,services,practical,intermediate
What is the advantage of using the Gateway API over Ingress?,"It offers more advanced features, better extensibility, and more control over traffic routing.",networking,comparative,advanced
Explain how DNS works for service discovery in Kubernetes.,"Kubernetes provides DNS names for Services, allowing workloads to discover and access them.",services,conceptual,intermediate
How can pods on Windows communicate within the same cluster?,The provided text states that the rule about direct communication doesn't apply to host-network pods on Windows; other methods may be necessary.,networking,exception,advanced
What are some considerations when choosing a pod network implementation?,"Factors such as support for NetworkPolicy, integration with other tools, and performance characteristics are important.",networking,conceptual,advanced
In what scenarios might a custom service proxy be preferred over kube-proxy?,When tighter integration with the pod network implementation is desired for better performance or advanced features.,networking,scenario,advanced
What is a container image in Kubernetes?,"A container image is a binary artifact containing an application and its dependencies, ready to run in a containerized environment.",images,conceptual,beginner
What is the purpose of a container image registry?,"A container image registry stores and manages container images, allowing for easy distribution and access.",images,conceptual,beginner
Explain the difference between an image tag and an image digest.,A tag is a human-readable identifier for an image version; a digest is a cryptographically secure hash representing the image's content.,images,conceptual,intermediate
What is the default image registry used by Kubernetes if none is specified?,The Docker public registry (docker.io).,images,factual,intermediate
How does Kubernetes handle image names without a specified tag?,It defaults to the 'latest' tag.,images,factual,intermediate
What is the recommended practice for image tags in production environments?,"Use meaningful, versioned tags (e.g., v1.2.3) or digests instead of 'latest'.",images,best_practice,intermediate
Why are image digests preferred over tags for production deployments?,"Digests guarantee immutability, preventing accidental rollbacks to different versions of the code.",images,conceptual,intermediate
Describe the `imagePullPolicy` options in Kubernetes and their implications.,`IfNotPresent`: Pulls only if the image isn't present; `Always`: Always pulls; `Never`: Never pulls.,images,conceptual,intermediate
What is the default `imagePullPolicy` if neither tag nor digest is specified?,Always,images,factual,intermediate
What is the default `imagePullPolicy` if a digest is specified?,IfNotPresent,images,factual,intermediate
What is the default `imagePullPolicy` if a tag other than `latest` is specified?,IfNotPresent,images,factual,intermediate
"How can you force Kubernetes to always pull an image, regardless of its local presence?",Set `imagePullPolicy` to `Always` or omit `imagePullPolicy` and use the `latest` tag.,images,practical,intermediate
What does the `ImagePullBackOff` status indicate for a container?,"Kubernetes failed to pull the container image, likely due to issues like an invalid image name or lack of access.",images,conceptual,intermediate
Explain how to specify an image using its digest.,Replace `<image-name>:<tag>` with `<image-name>@<digest>`.  For example: `myimage@sha256:abcdef123456`,images,practical,intermediate
What is the purpose of the `AlwaysPullImages` admission controller?,"It forces Kubernetes to always pull images, regardless of the `imagePullPolicy` setting.",images,conceptual,advanced
Describe a scenario where using `imagePullPolicy: Never` might be appropriate.,In specific testing or development scenarios where you've pre-pulled images to a node and want to avoid network calls.,images,scenario,advanced
What are the potential drawbacks of always using `imagePullPolicy: Always`?,"Increased network traffic and potential performance impact, especially in large clusters.",images,conceptual,advanced
How does the kubelet interact with the container runtime to manage images?,"The kubelet uses the container runtime's API to pull, cache, and use container images.",images,conceptual,advanced
Explain how caching affects image pull times with `imagePullPolicy: Always`.,"Container runtimes often cache image layers, making subsequent pulls of the same image much faster.",images,conceptual,advanced
What is the maximum length allowed for a Kubernetes image tag?,128 characters,images,factual,beginner
What regular expression pattern must a Kubernetes image tag conform to?,"[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127}",images,factual,intermediate
"If you create a Deployment with a non-latest tag and later update it to latest, will the `imagePullPolicy` automatically change?","No, the `imagePullPolicy` is set only upon initial object creation.",images,factual,intermediate
How can you ensure a consistent image version across all Pods in a Deployment?,Specify the image digest in the Deployment spec.,images,practical,intermediate
What is the role of an admission controller in managing image versions?,"Some admission controllers can mutate Pod specs to use digests instead of tags, ensuring consistency.",images,conceptual,advanced
What are the different ways to specify a registry hostname and port in an image name?,"e.g., `fictional.registry.example/imagename` or `fictional.registry.example:10443/imagename`",images,practical,beginner
What happens if you specify both a tag and a digest in an image name?,Only the digest is used for pulling the image.,images,factual,intermediate
Describe a situation where using a private registry requires additional configuration in Kubernetes.,You need to configure an `imagePullSecret` to authenticate with the private registry.,images,scenario,intermediate
What component in Kubernetes is responsible for pulling container images?,The kubelet.,images,factual,beginner
Where can you find more detailed information about the image digest format?,The OCI Image Specification.,images,factual,beginner
Where can you find more information about image tag validation?,The OCI Distribution Specification.,images,factual,beginner
What is a ConfigMap in Kubernetes?,"A ConfigMap is an API object that stores non-confidential data in key-value pairs, allowing you to decouple configuration from your application images.",configuration,conceptual,beginner
What is the maximum size limit for data stored in a ConfigMap?,1 MiB (1 Megabyte),configuration,factual,beginner
Should sensitive data be stored in a ConfigMap? Why or why not?,No. ConfigMaps do not provide encryption or secrecy. Use Secrets for sensitive data.,security,conceptual,beginner
Name three ways a Pod can consume data from a ConfigMap.,"Environment variables, command-line arguments, or as configuration files in a volume.",configuration,factual,intermediate
What are the `data` and `binaryData` fields in a ConfigMap definition?,"`data` stores UTF-8 strings, while `binaryData` stores base64-encoded binary data.  Both are optional.",configuration,factual,intermediate
What naming restrictions apply to a ConfigMap's name?,It must be a valid DNS subdomain name.,configuration,factual,intermediate
What is an immutable ConfigMap?,A ConfigMap with the `immutable` field set to true; its data cannot be changed after creation (available from v1.19).,configuration,conceptual,intermediate
Must a Pod and its referenced ConfigMap be in the same namespace?,Yes.,namespaces,factual,beginner
Can a static Pod reference a ConfigMap?,No.,pods,factual,intermediate
Explain how to use a ConfigMap to set environment variables in a container.,Use the `env` section in the Pod spec with `valueFrom` and `configMapKeyRef` to specify the ConfigMap and key.,configuration,practical,intermediate
How can you mount a ConfigMap as a volume in a Pod?,Define a volume of type `configMap` in the Pod's `volumes` section and mount it using `volumeMounts` in the container spec.,volumes,practical,intermediate
What happens if the `items` array is omitted when mounting a ConfigMap as a volume?,Every key in the ConfigMap becomes a file with the same name as the key.,volumes,practical,intermediate
How are mounted ConfigMaps updated automatically?,"The kubelet periodically checks for updates and uses a configurable cache (e.g., watch, TTL) to manage the ConfigMap's data.",kubelet,conceptual,advanced
What are the different methods of accessing ConfigMap data from within a Pod?,"Environment variables, command-line arguments, volume mounts, and directly accessing the Kubernetes API.",pods,factual,intermediate
Describe a scenario where using a ConfigMap is beneficial for application portability.,Using environment variables defined by a ConfigMap allows you to change database connection strings without rebuilding your container image when moving from development to production environments.,portability,scenario,intermediate
How does the kubelet handle updates to a ConfigMap mounted as a volume?,It periodically syncs with the API server and updates its local cache of the ConfigMap data.  The update strategy is configurable.,kubelet,conceptual,advanced
"Besides Pods, what other Kubernetes components might use ConfigMaps?",Addons or operators might use ConfigMaps to configure their behavior.,addons,conceptual,intermediate
Can multiple Pods reference the same ConfigMap?,Yes.,configuration,factual,beginner
What is the significance of `readOnly: true` when mounting a ConfigMap as a volume?,It ensures the application cannot modify the files created from the ConfigMap data.,security,conceptual,intermediate
Explain the difference between `configMapKeyRef` and using the `items` array when referencing a ConfigMap in a Pod.,`configMapKeyRef` maps individual keys to environment variables or command-line arguments. `items` creates files from selected keys as a volume mount.,configuration,practical,intermediate
What is the purpose of the `mountPath` field when using volume mounts with ConfigMaps?,It specifies the directory within the container where the ConfigMap files will be mounted.,volumes,factual,intermediate
How does accessing a ConfigMap directly via the Kubernetes API differ from other methods?,"It allows for real-time updates and access to ConfigMaps in different namespaces, requiring custom code to handle the API interaction.",api,conceptual,advanced
Describe a situation where directly accessing the Kubernetes API to read a ConfigMap would be advantageous.,"When your application requires real-time updates to configuration and needs to react immediately to ConfigMap changes, or when needing to access a ConfigMap in a different namespace.",api,scenario,advanced
What are the key differences between using a ConfigMap and a Secret in Kubernetes?,"ConfigMaps store non-sensitive data, while Secrets are designed for sensitive information like passwords and API keys. Secrets are encrypted at rest.",security,conceptual,intermediate
What happens if you define conflicting keys in the `data` and `binaryData` fields of a ConfigMap?,"It's an invalid ConfigMap definition, and Kubernetes will reject it.",configuration,factual,intermediate
How would you troubleshoot a Pod that fails to start due to an issue with a referenced ConfigMap?,"Check if the ConfigMap exists, if the name and key references are correct, and if the namespace matches the Pod's namespace. Examine the Pod's logs for error messages.",troubleshooting,practical,intermediate
Explain the role of the `configMapAndSecretChangeDetectionStrategy` in KubeletConfiguration.,"It configures how the kubelet detects changes in ConfigMaps and Secrets, impacting how frequently it updates its local cache and reflects changes in mounted volumes.",kubelet,conceptual,advanced
What are the possible strategies for `configMapAndSecretChangeDetectionStrategy`?,"Watch (default), TTL-based, or redirecting all requests.",kubelet,factual,advanced
"If a ConfigMap is updated, how quickly will the changes be reflected in a Pod that mounts it as a volume?",It depends on the `configMapAndSecretChangeDetectionStrategy` and the kubelet's sync frequency.  It's not instantaneous; there's a delay based on the chosen strategy and kubelet settings.,kubelet,conceptual,advanced
Why would you choose to use a ConfigMap over directly embedding configuration data within your application's container image?,"It promotes better separation of concerns, making configuration changes easier without rebuilding the image.  It also improves portability and maintainability.",best practices,conceptual,intermediate
What is the primary function of a Kubernetes RuntimeClass?,"A RuntimeClass allows you to select the container runtime configuration for a Pod, enabling different runtimes or runtime configurations for various workloads.",runtime,conceptual,beginner
Why would you use different RuntimeClasses for different Pods?,"To balance performance and security.  For example, using a hardware-virtualized runtime for sensitive workloads increases security at the cost of some performance.",runtime,conceptual,intermediate
How do you specify a RuntimeClass for a Pod?,You specify the RuntimeClass using the `runtimeClassName` field in the Pod's spec.,pods,practical,beginner
What happens if the specified RuntimeClass doesn't exist or the CRI can't run the handler?,"The Pod will enter the `Failed` terminal phase, and a corresponding event will contain an error message.",runtime,practical,intermediate
What is the default behavior if no `runtimeClassName` is specified in a Pod?,"The default RuntimeHandler will be used, equivalent to having the RuntimeClass feature disabled.",runtime,conceptual,intermediate
What is the significance of the `handler` field in a RuntimeClass definition?,It specifies the name of the corresponding CRI configuration that the RuntimeClass uses.,runtime,conceptual,beginner
Where are containerd runtime handlers configured?,"In containerd's configuration file at `/etc/containerd/config.toml`, under the `runtimes` section.",runtime,practical,intermediate
Where are CRI-O runtime handlers configured?,"In CRI-O's configuration file at `/etc/crio/crio.conf`, under the `crio.runtime.runtimes` table.",runtime,practical,intermediate
What assumption does RuntimeClass make about node configuration by default?,"It assumes a homogeneous node configuration, meaning all nodes are configured the same way for container runtimes.",runtime,conceptual,intermediate
How can you support heterogeneous node configurations with RuntimeClass?,By using the `scheduling` field in the RuntimeClass to specify node selectors and tolerations.,runtime,conceptual,advanced
Explain the role of `nodeSelector` in RuntimeClass scheduling.,It defines labels that nodes must have to support a specific RuntimeClass.  It's merged with the Pod's `nodeSelector` during admission.,scheduling,conceptual,advanced
Explain the role of `tolerations` in RuntimeClass scheduling.,"They allow Pods using a RuntimeClass to tolerate taints on nodes, enabling scheduling on nodes with specific taints.",scheduling,conceptual,advanced
What is the purpose of the `overhead` field in a RuntimeClass?,"It allows you to specify resource overhead associated with running a Pod using that RuntimeClass, helping the scheduler make better resource allocation decisions.",resource management,conceptual,advanced
What are the recommended access control restrictions for RuntimeClass resources?,Write operations (create/update/patch/delete) should be restricted to cluster administrators.,security,conceptual,intermediate
What is a valid name for a RuntimeClass object?,A valid DNS subdomain name.,naming conventions,conceptual,beginner
What is a valid name for a RuntimeClass handler?,A valid DNS label name.,naming conventions,conceptual,beginner
In what Kubernetes API group is the RuntimeClass resource defined?,node.k8s.io/v1,api,factual,beginner
What is the significance of the `metadata.name` field in a RuntimeClass definition?,It's the name used to reference the RuntimeClass when specifying it in a Pod's `runtimeClassName`.,runtime,conceptual,beginner
"If a Pod uses a RuntimeClass with a `nodeSelector`, and that selector conflicts with the Pod's own `nodeSelector`, what happens?",The Pod will be rejected.,scheduling,practical,advanced
How are the `nodeSelector` and `tolerations` of a Pod and its RuntimeClass combined during scheduling?,"The `nodeSelector` is merged using an intersection, while the `tolerations` are merged using a union.",scheduling,conceptual,advanced
What Kubernetes version introduced the RuntimeClass feature as stable?,Kubernetes v1.20,versions,factual,beginner
What Kubernetes version introduced the RuntimeClass scheduling feature as beta?,Kubernetes v1.16,versions,factual,beginner
What Kubernetes version introduced the Pod Overhead feature as stable?,Kubernetes v1.24,versions,factual,beginner
Describe a scenario where using a RuntimeClass with hardware virtualization would be beneficial.,Running sensitive workloads in a highly isolated environment to protect against potential compromises from other containers or the host OS.,security,scenario,intermediate
How does declaring Pod overhead in a RuntimeClass impact the Kubernetes scheduler?,"It allows the scheduler to account for the additional resource consumption when making scheduling decisions, preventing over-commitment.",resource management,conceptual,advanced
What is the Container Runtime Interface (CRI)?,A gRPC interface between the kubelet and the container runtime (like containerd or CRI-O).,runtime,conceptual,intermediate
Why is it important to configure the CRI implementation correctly when using RuntimeClasses?,Because the RuntimeClass relies on the CRI to execute the specified container runtime configuration; incorrect configuration prevents Pods from running.,runtime,conceptual,intermediate
"Besides security, what other reasons might you use different RuntimeClasses?","To utilize different runtime features or optimizations, like different container image formats or specialized resource management strategies.",runtime,conceptual,advanced
What are the potential downsides of using a RuntimeClass with significant overhead?,Reduced cluster efficiency and potential performance degradation due to increased resource consumption.,resource management,conceptual,advanced
What is the core function of a Kubernetes controller?,"A Kubernetes controller is a control loop that monitors the current state of the cluster and makes changes to bring it closer to the desired state, as defined by Kubernetes objects.",architecture,conceptual,beginner
Explain the concept of 'desired state' and 'current state' in Kubernetes.,The 'desired state' is defined by the specifications (spec) in Kubernetes resources. The 'current state' is the actual state of the cluster. Controllers work to align the current state with the desired state.,architecture,conceptual,beginner
How does the Job controller interact with the API server?,"The Job controller doesn't directly run Pods. Instead, it interacts with the API server to create or delete Pods to achieve the desired state of a completed Job.",controllers,conceptual,intermediate
What is the role of the kubelet in relation to controllers?,"The kubelet is responsible for running Pods on nodes.  Controllers communicate with the API server, which in turn instructs the kubelets to create, update, or delete Pods.",architecture,conceptual,intermediate
Give an example of a controller that manages external state.,"A controller that manages the number of nodes in a cluster needs to interact with an external system (e.g., cloud provider API) to add or remove nodes.",controllers,conceptual,intermediate
How does a Kubernetes controller update the objects it manages?,"Controllers update the status section of the Kubernetes objects they manage to reflect the current state.  For example, a Job controller updates the Job object's status to 'Finished' upon completion.",controllers,conceptual,intermediate
"Why is it beneficial to have multiple, independent controllers instead of a monolithic controller?","Multiple independent controllers increase resilience. If one controller fails, others can continue operating without disruption.  It also improves maintainability and simplifies development.",design,conceptual,intermediate
"How do Kubernetes controllers handle potential conflicts when multiple controllers manage the same object type (e.g., Pods)?","Controllers utilize labels and selectors to distinguish and manage only the resources related to their controlling resource, preventing conflicts.",controllers,conceptual,intermediate
What is kube-controller-manager and what is its significance?,"kube-controller-manager is a component of the Kubernetes control plane that runs several built-in controllers, providing core functionalities like managing deployments and jobs.",architecture,conceptual,beginner
Describe the difference between built-in and custom controllers.,Built-in controllers are included with Kubernetes and provide essential functionalities.  Custom controllers can be created to extend Kubernetes capabilities and manage cluster resources beyond the built-in ones.,controllers,conceptual,beginner
How can you run a custom controller?,Custom controllers can be deployed as Kubernetes Pods within the cluster or run externally as independent processes.,controllers,practical,intermediate
Explain the importance of the 'spec' field in a Kubernetes resource.,The 'spec' field defines the desired state of a Kubernetes resource.  Controllers use this information to determine the actions needed to bring the current state into alignment.,resources,conceptual,beginner
What is the role of labels and selectors in controller functionality?,Labels are key-value pairs attached to Kubernetes objects.  Selectors allow controllers to identify and manage specific objects based on their labels.,labels_selectors,conceptual,intermediate
How does the concept of a control loop relate to Kubernetes controllers?,"Kubernetes controllers are essentially control loops that continuously monitor and adjust the cluster state to match the desired state, similar to a thermostat regulating room temperature.",architecture,conceptual,beginner
Why might a Kubernetes cluster never reach a completely stable state?,"Due to the continuous nature of controllers and the dynamic workload changes, a Kubernetes cluster is constantly adapting.  Stability is less about a static state and more about the ability of controllers to manage changes effectively.",architecture,conceptual,intermediate
What are some examples of Kubernetes built-in controllers?,"Examples include the Deployment controller, the Job controller, the ReplicaSet controller, and the Node controller.",controllers,factual,beginner
How does a controller handle failures?,"Kubernetes is designed with fault tolerance in mind. If a controller fails, other controllers or components of the control plane can take over its responsibilities.",resilience,conceptual,intermediate
What is the significance of the Kubernetes API server in the controller architecture?,The API server acts as the central hub for communication between controllers and other components of the Kubernetes system.  Controllers use the API server to observe the cluster state and make changes.,architecture,conceptual,intermediate
Describe a scenario where a controller might interact with a cloud provider API.,A node controller might interact with a cloud provider API to create new nodes in response to resource demands or to delete nodes that are no longer needed.,cloud_integration,scenario,intermediate
What are some common methods for extending Kubernetes functionality?,Creating custom controllers is a primary way to extend Kubernetes functionality.  Other methods involve using operators or integrating with existing tools through APIs.,extensibility,conceptual,intermediate
Explain the concept of horizontal pod autoscaling (HPA) and its relationship to controllers.,HPA automatically scales the number of pods in a deployment based on resource utilization.  The HPA functionality is implemented through a controller that monitors resource usage and adjusts the deployment accordingly.,autoscaling,conceptual,intermediate
How does a Deployment controller ensure that the desired number of Pods are running?,The Deployment controller uses ReplicaSets to manage the desired number of Pods.  It creates or deletes Pods as needed to maintain the desired replica count.,deployments,conceptual,intermediate
What is a Kubernetes resource and how does it relate to controllers?,A Kubernetes resource is an object managed by the Kubernetes system. Controllers act upon these resources to maintain the desired state of the cluster.,resources,conceptual,beginner
What is the difference between the 'spec' and 'status' fields in a Kubernetes resource?,"The 'spec' defines the desired state, while the 'status' reflects the current state of the resource.  Controllers modify the 'status' to reflect their actions.",resources,conceptual,intermediate
Explain how controllers contribute to the self-healing capabilities of Kubernetes.,"Controllers continuously monitor the cluster's state and automatically take corrective actions to address issues such as pod failures or resource shortages, enabling self-healing.",resilience,conceptual,intermediate
Describe a situation where you might need to write a custom controller.,You might write a custom controller to integrate with a specific external system or to manage a custom resource not supported by built-in controllers.,controllers,scenario,advanced
How does the design of Kubernetes controllers contribute to its scalability and maintainability?,The modular design of separate controllers allows for independent scaling and easier maintenance compared to a monolithic approach.  Failures in one controller do not necessarily affect others.,design,conceptual,advanced
Discuss the importance of observability in the context of Kubernetes controllers.,"Observability is crucial for monitoring controller performance, detecting issues, and ensuring that they are correctly managing the cluster's state.  Metrics and logs are important for this.",monitoring,conceptual,advanced
How can you debug issues related to Kubernetes controllers?,"Debugging controller issues involves examining logs, metrics, and the 'status' of relevant Kubernetes resources to understand the controller's actions and identify potential problems.",troubleshooting,practical,advanced
What is the Container Runtime Interface (CRI)?,The CRI is a plugin interface allowing the kubelet to interact with various container runtimes without recompiling Kubernetes components.,architecture,conceptual,beginner
What protocol does the CRI use for communication between the kubelet and the container runtime?,gRPC,architecture,factual,beginner
Why is the CRI important for Kubernetes scalability and flexibility?,"It allows Kubernetes to support different container runtimes without modifying its core code, enhancing portability and choice.",architecture,conceptual,intermediate
What happens if a container runtime doesn't support CRI v1?,The kubelet attempts to negotiate an older supported version.  Failure to negotiate any supported version prevents node registration.,architecture,scenario,intermediate
How does the kubelet interact with the container runtime?,"As a client, using the gRPC protocol defined by the CRI.",architecture,factual,beginner
What command-line flags can be used to configure the image service endpoint within the kubelet?,--image-service-endpoint,configuration,factual,intermediate
What is the preferred CRI version for the Kubernetes v1.33 kubelet?,CRI v1,versions,factual,intermediate
Is CRI v1alpha2 considered deprecated?,Yes,versions,factual,beginner
Describe the kubelet's behavior during a Kubernetes upgrade regarding CRI version selection.,"It attempts to automatically select the latest CRI version on restart. If this fails, it falls back to older supported versions.",upgrade,conceptual,intermediate
What happens if a gRPC re-dial is required due to a container runtime upgrade and the runtime doesn't support the initially selected CRI version?,"The redial fails, requiring a kubelet restart.",upgrade,scenario,intermediate
What is the role of the kubelet in relation to the CRI?,"The kubelet acts as the client, initiating communication with the container runtime via the CRI.",architecture,conceptual,beginner
What components are involved in the CRI communication?,The kubelet and the container runtime.,architecture,factual,beginner
How does the CRI improve the maintainability of Kubernetes?,"By abstracting the container runtime implementation, it simplifies upgrades and allows for easier integration of new runtimes.",maintainability,conceptual,intermediate
What is the significance of the `--image-service-endpoint` flag?,It allows configuring the location of the container image service used by the kubelet.,configuration,conceptual,intermediate
Why is it important for the container runtime to support the initially selected CRI version after an upgrade?,"To ensure successful gRPC re-dials after a runtime upgrade, preventing kubelet restarts.",upgrade,conceptual,advanced
Explain the concept of 'plugin interface' in the context of the CRI.,It means the CRI defines a standard set of functions that any container runtime must implement to integrate with Kubernetes.,architecture,conceptual,intermediate
What are the potential consequences of a failing CRI negotiation?,"The kubelet will fail to register the node, rendering it unavailable to the Kubernetes cluster.",troubleshooting,scenario,intermediate
What is the role of the `kubelet` in the Kubernetes architecture?,"The kubelet is an agent that runs on each node in the cluster, responsible for managing containers based on instructions from the master.",architecture,conceptual,beginner
What are the benefits of using a container runtime?,"Container runtimes provide an environment for running containers, offering features like image management, resource isolation, and security.",containers,conceptual,beginner
In what scenario would a kubelet restart be necessary after a runtime upgrade?,"When the runtime upgrade necessitates a gRPC re-dial, and the upgraded runtime doesn't support the initially selected CRI version.",upgrade,scenario,advanced
How does the CRI contribute to the portability of Kubernetes?,"By allowing the use of different container runtimes, Kubernetes can run on various operating systems and infrastructure.",portability,conceptual,intermediate
What is the importance of having a working container runtime on each node?,The kubelet relies on the container runtime to launch and manage pods and their containers.,architecture,conceptual,beginner
What are some examples of container runtimes that can be used with Kubernetes?,"Docker, containerd, CRI-O",runtimes,factual,intermediate
Explain the significance of the kubelet's ability to negotiate CRI versions.,"It allows for backward compatibility, ensuring interoperability between different versions of kubelets and container runtimes.",compatibility,conceptual,advanced
What is a potential issue if the image service endpoint is not correctly configured?,"The kubelet may fail to pull container images, preventing pod deployments.",troubleshooting,scenario,intermediate
How does the CRI enhance the extensibility of Kubernetes?,It allows developers to create and integrate new container runtimes without modifying the core Kubernetes code.,extensibility,conceptual,intermediate
Why is the gRPC protocol suitable for CRI communication?,"gRPC is efficient, supports bidirectional streaming, and offers strong typing, ideal for managing container runtime interactions.",technology,conceptual,advanced
What is the fallback mechanism if the kubelet cannot automatically select the latest CRI version during an upgrade?,"It attempts to negotiate with older, supported CRI versions.",upgrade,factual,intermediate
What action is recommended if you encounter problems with CRI during a Kubernetes upgrade?,Check kubelet logs for errors related to CRI negotiation and version compatibility.  Consult the Kubernetes documentation for troubleshooting guidance.,troubleshooting,practical,advanced
What is the primary function of Kubernetes garbage collection?,"To automatically clean up cluster resources such as terminated pods, completed jobs, and unused containers and images.",garbage_collection,conceptual,beginner
List at least five types of resources Kubernetes garbage collection manages.,"Terminated pods, completed Jobs, objects without owner references, unused containers and images, dynamically provisioned PersistentVolumes with a Delete reclaim policy, and stale CertificateSigningRequests.",garbage_collection,listing,intermediate
Explain the role of owner references in Kubernetes garbage collection.,"Owner references establish relationships between Kubernetes objects, enabling the control plane to automatically clean up dependent resources when an owner is deleted.",garbage_collection,conceptual,intermediate
What happens when a namespaced dependent object references a cluster-scoped owner in Kubernetes v1.20+?,It is treated as having an unresolvable owner reference and is not garbage collected; a warning Event with reason OwnerRefInvalidNamespace is reported.,garbage_collection,scenario,advanced
Describe the difference between foreground and background cascading deletion.,"Foreground deletion keeps the owner object visible until all dependents are deleted; background deletion removes the owner immediately, cleaning up dependents asynchronously.",garbage_collection,comparison,intermediate
How can you prevent dependent objects from being deleted when their owner is deleted?,By orphaning the dependent objects.,garbage_collection,practical,beginner
What is the role of `metadata.deletionTimestamp` in foreground cascading deletion?,It records the time when the owner object was marked for deletion.,garbage_collection,conceptual,intermediate
What is the purpose of finalizers in Kubernetes garbage collection?,To ensure that necessary cleanup tasks are completed before an object is deleted.,garbage_collection,conceptual,intermediate
How does the kubelet perform garbage collection of unused containers?,"Every minute, based on settings like MinAge, MaxPerPodContainer, and MaxContainers, prioritizing oldest containers first.",garbage_collection,process,intermediate
What are the implications of using external garbage collection tools with Kubernetes?,They can interfere with kubelet behavior and remove necessary containers.,garbage_collection,risk,beginner
How does the kubelet determine which images to garbage collect?,"It considers disk usage limits (HighThresholdPercent, LowThresholdPercent) and, in beta, `imageMaximumGCAge` to prioritize oldest unused images.",garbage_collection,process,intermediate
Explain the `imageMaximumGCAge` kubelet setting.,"A configurable duration specifying the maximum time an image can be unused before garbage collection, regardless of disk usage (beta feature).",garbage_collection,conceptual,intermediate
What happens to the tracked image age if the kubelet restarts with `imageMaximumGCAge` configured?,"It resets, requiring the full `imageMaximumGCAge` duration to elapse before garbage collection based on age.",garbage_collection,scenario,advanced
What is the purpose of `ownerReference.blockOwnerDeletion=true`?,To prevent the deletion of an owner object until a specific dependent object is also deleted during foreground cascading deletion.,garbage_collection,conceptual,advanced
How can you check for invalid cross-namespace owner references in Kubernetes?,By running `kubectl get events -A --field-selector=reason=OwnerRefInvalidNamespace`.,garbage_collection,practical,intermediate
What are orphan objects in the context of Kubernetes garbage collection?,Dependent objects that remain after their owner is deleted.,garbage_collection,conceptual,beginner
True or False: Kubernetes always deletes dependent objects when an owner is deleted.,False.  Dependent objects can be orphaned.,garbage_collection,true_false,beginner
What command would you use to check for events related to invalid owner references?,`kubectl get events -A --field-selector=reason=OwnerRefInvalidNamespace`,garbage_collection,practical,intermediate
Describe the role of the kubelet's image manager in garbage collection.,"It manages the lifecycle of container images, cooperating with cadvisor to make garbage collection decisions based on disk usage and age.",garbage_collection,conceptual,intermediate
What are the kubelet configuration parameters that control container garbage collection?,"MinAge, MaxPerPodContainer, and MaxContainers.",garbage_collection,listing,intermediate
How does Kubernetes handle Node garbage collection in cloud and on-premises environments?,"In cloud environments, the cloud controller manager handles it; on-premises, a similar addon is used.",garbage_collection,comparison,intermediate
What is the default cascading deletion behavior in Kubernetes?,Background cascading deletion.,garbage_collection,factual,beginner
How frequently does the kubelet perform garbage collection on unused images?,Every five minutes.,garbage_collection,factual,beginner
How does the kubelet handle potential conflicts between MaxPerPodContainer and MaxContainers?,It adjusts MaxPerPodContainer to stay within the global limit of MaxContainers.,garbage_collection,scenario,advanced
What is the purpose of the kubelet's `HighThresholdPercent` and `LowThresholdPercent` settings?,"To define the disk usage thresholds that trigger and stop image garbage collection, respectively.",garbage_collection,conceptual,intermediate
What Kubernetes component is responsible for garbage collection of unused containers and images?,The kubelet.,garbage_collection,factual,beginner
Explain how Node Lease objects relate to garbage collection.,"They help the control plane track the health and liveness of nodes, facilitating garbage collection when nodes are removed.",garbage_collection,conceptual,intermediate
"Can you disable container garbage collection entirely in the kubelet? If so, how?","Yes, by setting MinAge, MaxPerPodContainer, and MaxContainers to values less than 0.",garbage_collection,practical,advanced
What is the significance of `cadvisor` in Kubernetes' image garbage collection?,"It provides container resource usage information to the kubelet, aiding in its garbage collection decisions.",garbage_collection,conceptual,intermediate
What is the primary function of the Kubernetes Cloud Controller Manager?,"The Cloud Controller Manager is a control plane component that integrates Kubernetes with cloud provider APIs, managing cloud-specific resources and decoupling cloud interactions from core Kubernetes functionality.",architecture,conceptual,beginner
How does the Cloud Controller Manager achieve cloud provider independence?,"It uses a plugin mechanism, allowing different cloud providers to integrate through a common interface (CloudProvider) without modifying the core Kubernetes codebase.",architecture,conceptual,intermediate
Explain the role of the Node Controller within the Cloud Controller Manager.,"The Node Controller monitors the status of nodes in the cloud, updating Kubernetes Node objects with information like identifiers, labels, and health status. It also removes Node objects when the underlying cloud instance is deleted.",controllers,conceptual,intermediate
What are the key responsibilities of the Service Controller in the Cloud Controller Manager?,"The Service Controller manages cloud-based infrastructure components like load balancers, interacting with cloud provider APIs to provision and configure these resources based on Kubernetes Service definitions.",controllers,conceptual,intermediate
What is the purpose of the Route Controller in the Cloud Controller Manager?,"The Route Controller configures network routes within the cloud to enable communication between Pods across different nodes in the Kubernetes cluster, sometimes also managing IP address allocation.",networking,conceptual,intermediate
How does the Cloud Controller Manager ensure that different cloud providers can integrate with Kubernetes?,"It uses the CloudProvider interface, which allows cloud-specific implementations to be plugged into the core Kubernetes code.",extensibility,conceptual,intermediate
What are the RBAC permissions required by the Node Controller?,"The Node Controller requires full CRUD (Create, Read, Update, Delete) access to Node objects and patch access to Node/status.",security,conceptual,intermediate
What RBAC permissions does the Service Controller require?,"It needs list, watch, patch, and update access to Service objects, along with patch and update access to the Service/status subresource.",security,conceptual,intermediate
What RBAC permissions does the Route Controller require?,The Route Controller primarily requires get access to Node objects.,security,conceptual,intermediate
"Besides Node, Service, and Route Controllers, what other resources does the Cloud Controller Manager interact with?","It interacts with Events and ServiceAccounts, requiring create, patch, and update access to Events and create access to ServiceAccounts.",security,conceptual,intermediate
Where does the Cloud Controller Manager typically run?,"It runs as a replicated set of processes in the Kubernetes control plane, usually as containers within Pods.  It can also run as a Kubernetes addon.",deployment,conceptual,beginner
Describe a scenario where the Node Controller would delete a Node object.,"If a node's underlying cloud instance is terminated or deleted, the Node Controller detects this through the cloud provider API and removes the corresponding Node object from the Kubernetes cluster.",controllers,scenario,intermediate
How would you troubleshoot a situation where a Kubernetes Service is not properly provisioning a load balancer in your cloud?,"Start by checking the Service definition for correctness, then examine the Cloud Controller Manager logs for errors related to service creation or interaction with the cloud provider API.  Check cloud provider console for any issues with load balancer creation.",troubleshooting,practical,advanced
What is the significance of the `CloudProvider` interface in the Cloud Controller Manager's design?,"It's a core abstraction that enables pluggability of different cloud providers. Each cloud provider implements this interface, allowing the Cloud Controller Manager to interact with any supported cloud without needing specific code for each provider.",design,conceptual,intermediate
Explain the benefits of decoupling cloud-specific logic from the core Kubernetes components.,"Decoupling allows for independent release cycles for Kubernetes and cloud provider integrations, improves maintainability, and enhances portability across different cloud environments.",architecture,conceptual,intermediate
How would you add a new cloud provider support to the Cloud Controller Manager?,"You would need to implement the `CloudProvider` interface for your cloud, creating a new plugin that interacts with your cloud's API and handles the appropriate controllers' actions.",development,practical,advanced
What is the difference between running the Cloud Controller Manager as part of the control plane and as a Kubernetes addon?,"Running it as part of the control plane tightly couples it with the control plane's lifecycle, while running it as an addon offers more flexibility in deployment and management but potentially introduces additional complexity.",deployment,conceptual,intermediate
Why is RBAC crucial for the security of the Cloud Controller Manager?,"RBAC limits the Cloud Controller Manager's access to only the necessary Kubernetes resources, preventing unauthorized modifications or actions and enhancing overall cluster security.",security,conceptual,intermediate
What happens if the Cloud Controller Manager fails?,"The impact depends on the failure.  Node management, service provisioning and routing will be affected, potentially impacting application availability and functionality. The severity depends on the specific controller that fails and the resilience of the overall system.",high availability,scenario,advanced
How does the Cloud Controller Manager contribute to the scalability and high availability of a Kubernetes cluster?,"By managing cloud resources efficiently and distributing workload across multiple nodes and load balancers, the Cloud Controller Manager contributes significantly to scalability and high availability. Its design allows the different controllers to scale independently if necessary.",high availability,conceptual,advanced
In what Kubernetes version did the Cloud Controller Manager reach beta status?,Kubernetes v1.11,history,factual,beginner
What is a potential downside of splitting the node controller into separate node controller and node lifecycle controller?,"Increased complexity in management and monitoring, potentially leading to more points of failure.",architecture,conceptual,intermediate
How can you monitor the health and performance of the Cloud Controller Manager?,"Use Kubernetes monitoring tools like Prometheus and Grafana, along with the Kubernetes API and kubectl to examine resource usage and logs.",monitoring,practical,advanced
What is the significance of the `cloud.go` file mentioned in the documentation?,"It contains the definition of the `CloudProvider` interface, crucial for extending the Cloud Controller Manager to support different cloud providers.",implementation details,conceptual,intermediate
"If a node becomes unresponsive, how does the Node Controller respond?","It checks with the cloud provider's API to verify the node's status. If the cloud provider confirms the node is deleted or deactivated, the Node Controller deletes the corresponding Node object in Kubernetes.",controllers,scenario,intermediate
What are some common challenges encountered when integrating a custom cloud provider with the Cloud Controller Manager?,"Common challenges include correctly implementing the CloudProvider interface, handling authentication and authorization with the cloud provider's API, and managing errors and exceptions during interactions with cloud resources.",development,conceptual,advanced
How does the Cloud Controller Manager ensure the secure operation of the cluster?,"By leveraging RBAC to control access to resources, creating ServiceAccounts for secure interaction, and carefully managing its own privileges within the Kubernetes cluster.",security,conceptual,intermediate
Where can you find information on developing your own cloud controller manager plugin?,The documentation referenced points to 'Developing Cloud Controller Manager' for more information.,resources,factual,beginner
Describe a scenario where understanding the Cloud Controller Manager’s interactions with Services is crucial for troubleshooting.,"When a service fails to provision a load balancer or doesn't route traffic correctly; understanding the CCM's role in this process helps pinpoint whether the issue is a configuration problem, a cloud provider API issue, or a problem within the CCM itself.",troubleshooting,scenario,advanced
What is the significance of the `verbs` field within the RBAC ClusterRole definition for the Cloud Controller Manager?,"It specifies the allowed actions (e.g., get, list, create, update, delete, patch, watch) that the Cloud Controller Manager can perform on specific Kubernetes resources, controlling its access level.",security,conceptual,intermediate
What is the primary communication pattern between Kubernetes nodes and the control plane?,"A hub-and-spoke model, where all communication from nodes and pods goes through the API server.",architecture,conceptual,beginner
On what port does the Kubernetes API server typically listen for secure connections?,Port 443 (HTTPS).,networking,factual,beginner
How does a pod securely communicate with the Kubernetes API server?,By leveraging service accounts which inject the root certificate and a bearer token.,security,conceptual,intermediate
What is the purpose of the `kube-proxy` component in Kubernetes networking?,It redirects traffic to the API server's HTTPS endpoint via virtual IP addresses.,networking,conceptual,intermediate
Describe two primary communication paths from the control plane to the nodes.,"1. API server to kubelet. 2. API server to nodes, pods, or services via its proxy functionality.",architecture,conceptual,intermediate
What are the security risks associated with the default API server to kubelet connection?,It's susceptible to man-in-the-middle attacks because the API server doesn't verify the kubelet's certificate by default.,security,conceptual,intermediate
How can you secure the API server to kubelet connection?,Use the `--kubelet-certificate-authority` flag to provide the API server with a root certificate bundle or use SSH tunneling.,security,practical,intermediate
"What is the security posture of the default API server connections to nodes, pods, and services?","They are plain HTTP connections, unauthenticated and unencrypted; therefore, unsafe for untrusted networks.",security,conceptual,intermediate
"How can you make the API server connections to nodes, pods, and services secure?","By prefixing `https:` to the URL, but this only encrypts, it doesn't validate certificates or provide client credentials.",security,practical,intermediate
"What is the deprecated method for securing control plane to node communication, and what is its replacement?",SSH tunnels are deprecated; Konnectivity service is the replacement.,networking,factual,intermediate
Explain how SSH tunnels secure control plane to node communication.,"The API server creates an SSH tunnel to each node, routing traffic through the tunnel, preventing exposure outside the node network.",security,conceptual,intermediate
"What is the Konnectivity service, and what is its purpose in Kubernetes?","It's a TCP-level proxy replacing SSH tunnels, providing secure control plane to node communication.",networking,conceptual,intermediate
What are the two components of the Konnectivity service?,The Konnectivity server (in the control plane) and Konnectivity agents (in the node network).,networking,factual,intermediate
How does Konnectivity improve security compared to SSH Tunnels?,"It provides a more modern and robust solution for secure communication, avoiding the complexities and security concerns of SSH.",security,comparative,advanced
What are some scenarios where you might need to customize Kubernetes network configuration?,Running the cluster on untrusted networks or on public IPs in a cloud provider.,networking,scenario,beginner
Why is client authentication crucial for secure communication between nodes and the control plane?,It verifies the identity of the nodes and prevents unauthorized access to the API server.,security,conceptual,intermediate
What are the implications of allowing anonymous requests to the Kubernetes API server?,It increases the risk of unauthorized access and compromises cluster security.,security,conceptual,intermediate
Explain the role of authorization in securing Kubernetes communication.,It controls what actions authenticated users and services can perform within the cluster.,security,conceptual,intermediate
How does kubelet TLS bootstrapping contribute to cluster security?,"It automates the provisioning of kubelet client certificates, enhancing secure communication with the API server.",security,conceptual,intermediate
What is the purpose of the `--kubelet-certificate-authority` flag?,It provides the API server with a root certificate bundle to verify the kubelet's serving certificate.,security,factual,intermediate
Why is it important to secure the kubelet API?,To prevent unauthorized access and modification of the node's state and configuration.,security,conceptual,intermediate
What are some methods for securing communication between the API server and the kubelet?,Using mutual TLS authentication with certificate verification or SSH tunneling.,security,practical,intermediate
Discuss the advantages and disadvantages of using SSH tunnels for securing communication.,"Advantages: Simple to set up for smaller clusters. Disadvantages: Deprecated, less scalable, and can introduce security vulnerabilities if not properly configured.",networking,comparative,advanced
In what Kubernetes version did the Konnectivity service reach beta status?,Kubernetes v1.18,features,factual,beginner
How does the Konnectivity agent maintain network connections?,It initiates and maintains connections to the Konnectivity server.,networking,conceptual,intermediate
What are the implications of not enabling authentication and authorization for kubelet API?,"Increased security risks, allowing unauthorized access and control over the node.",security,conceptual,intermediate
Explain the difference between authentication and authorization in the context of Kubernetes.,"Authentication verifies the identity of the user/service, while authorization determines what actions they are allowed to perform.",security,conceptual,intermediate
Describe a scenario where you would use kubectl port-forward.,To access a service running in a pod that is not exposed externally.,operations,scenario,intermediate
How can you retrieve logs for pods in a Kubernetes cluster?,Using the Kubernetes API or kubectl logs command.,operations,practical,beginner
What are the two primary approaches to customizing a Kubernetes cluster?,"Configuration (changing command-line arguments, config files, or API resources) and Extensions (running additional programs or network services).",cluster customization,conceptual,beginner
Why are configuration files and command arguments generally less preferred than policy APIs for cluster customization?,"They might not be changeable in hosted services, are subject to change across Kubernetes versions, and often require process restarts.",cluster customization,conceptual,intermediate
Name three built-in Kubernetes policy APIs.,"ResourceQuota, NetworkPolicy, and Role-Based Access Control (RBAC).",policy,recall,beginner
What is the primary advantage of using stable policy APIs?,"They have a defined support policy, similar to other Kubernetes APIs, ensuring long-term stability and maintainability.",policy,conceptual,intermediate
What are Kubernetes extensions?,"Software components that deeply integrate with Kubernetes to extend its functionality, adapting it to support new types and kinds of hardware.",extensions,conceptual,beginner
Describe the controller pattern in Kubernetes.,"A client program that reads an object's .spec, performs actions, and updates the object's .status, providing automation and reconciliation.",extensions,conceptual,intermediate
What is a Kubernetes webhook?,"A mechanism where Kubernetes acts as a client, making a network request to a remote service (webhook backend).",extensions,conceptual,intermediate
How does the binary plugin model differ from the webhook model in Kubernetes extensions?,"Binary plugins involve Kubernetes executing a binary directly, while webhooks involve network requests to a remote service.",extensions,comparison,intermediate
Give an example of a Kubernetes binary plugin.,CSI (Container Storage Interface) storage plugins or CNI (Container Network Interface) network plugins.,extensions,recall,beginner
How can you extend the kubectl command-line tool?,"By using kubectl plugins, which are separate binaries that add or replace the behavior of specific subcommands.",extensions,practical,intermediate
What is a Custom Resource Definition (CRD) in Kubernetes?,A mechanism to extend the Kubernetes API by defining new API objects beyond the built-in resources.,API extensions,conceptual,intermediate
Explain the API Aggregation Layer in Kubernetes.,"A mechanism to integrate the Kubernetes API with additional services, such as for metrics, allowing access to external data through the API.",API extensions,conceptual,advanced
"What is the 'controller' pattern, and how does it relate to the 'operator' pattern?",The controller pattern is a control loop that manages resources based on a desired state. The operator pattern is a specialized controller for managing complex applications.,automation,conceptual,advanced
Can you replace or change existing Kubernetes API groups when extending the API?,"No, custom resources always fall into new API groups.  Existing groups cannot be modified.",API extensions,conceptual,intermediate
What is the purpose of API Access Extensions?,To modify the behavior of existing Kubernetes APIs (such as Pods) by intercepting and modifying requests to the API server.,API extensions,conceptual,advanced
How do Device Plugins extend Kubernetes?,"They allow integration of custom hardware or node-local facilities, making them available to pods.",node extensions,conceptual,intermediate
What is the role of Storage Plugins in Kubernetes?,"They add support for new kinds of storage and volume types, extending the cluster's storage capabilities.",storage,conceptual,intermediate
"What component manages pod networking in Kubernetes, and how is it extended?","The kubelet uses Network Plugins (like CNI) to manage pod networking, allowing different networking implementations.",networking,conceptual,intermediate
What are credential plugins in the context of kubectl?,"Plugins that provide authentication credentials to kubectl, allowing access to different clusters or cloud providers.",client extensions,conceptual,intermediate
Why are client extensions like kubectl plugins limited in their scope?,They only affect the individual user's local environment and cannot enforce site-wide policies.,client extensions,conceptual,intermediate
Explain the difference between a Kubernetes Pod and a Deployment.,"A Pod is a single instance of a running container, while a Deployment manages multiple Pods and ensures a desired number of replicas are running.",workloads,conceptual,beginner
"What is a Kubernetes Namespace, and why are they useful?","Namespaces are logical partitions within a cluster, allowing for resource isolation and organization across different teams or projects.",namespaces,conceptual,beginner
How does RBAC (Role-Based Access Control) enhance Kubernetes security?,"RBAC enables granular control over who can access and perform actions on resources within the cluster, improving security and reducing risk.",security,conceptual,intermediate
"What is a Kubernetes Service, and how does it improve application access?","A Service provides a stable IP address and DNS name for a set of Pods, making it easier to access applications running within the cluster.",services,conceptual,beginner
Describe how Kubernetes ensures high availability using controllers and the API server.,"Controllers constantly monitor the state of resources and reconcile them to a desired state, while the API server acts as a central point for managing and accessing cluster resources.",high availability,conceptual,advanced
What are the key components involved in Kubernetes scheduling?,"The kubelet (on each node), the kube-scheduler (deciding pod placement), and the API server (managing resource requests).",scheduling,conceptual,intermediate
How can you extend Kubernetes scheduling behavior?,"Through custom scheduling algorithms and plugins, allowing for tailored pod placement based on specific needs.",scheduling,conceptual,advanced
Explain the concept of 'declarative' configuration in Kubernetes.,"You define the desired state of your application, and Kubernetes automatically manages the underlying infrastructure to achieve that state.",configuration,conceptual,intermediate
"What are some common challenges when extending Kubernetes, and how can they be mitigated?","Challenges include complexity, potential for introducing instability, and debugging issues across multiple components.  Careful planning, testing, and using established patterns can help mitigate these.",extensions,problem,advanced
What is the primary role of the Kubernetes scheduler?,"The Kubernetes scheduler's primary role is to select the most appropriate node for each Pod based on various factors like resource availability, constraints, and affinities.",scheduling,conceptual,beginner
"What is kube-scheduler, and where does it run?",kube-scheduler is the default scheduler in Kubernetes and runs as part of the Kubernetes control plane.,scheduling,conceptual,beginner
Explain the two main steps involved in node selection by kube-scheduler.,Node selection involves filtering (identifying feasible nodes) and scoring (ranking feasible nodes to choose the best one).,scheduling,conceptual,intermediate
What are 'feasible' nodes in the context of Kubernetes scheduling?,"Feasible nodes are those that meet all the scheduling requirements of a Pod, including resource requests and constraints.",scheduling,conceptual,intermediate
What happens if no nodes are feasible for a Pod?,The Pod remains unscheduled until a suitable node becomes available or the scheduler's configuration is adjusted.,scheduling,conceptual,intermediate
Describe the 'binding' process in Kubernetes scheduling.,Binding is the process where the scheduler notifies the API server of its node selection for a Pod.,scheduling,conceptual,intermediate
What are some factors considered during Kubernetes Pod scheduling?,"Factors include resource requirements, hardware/software constraints, affinity/anti-affinity, data locality, and inter-workload interference.",scheduling,conceptual,intermediate
Explain the role of Predicates in Kubernetes scheduling.,Predicates are used in the filtering step to determine if a node is feasible for a Pod.,scheduling,conceptual,intermediate
Explain the role of Priorities in Kubernetes scheduling.,Priorities are used in the scoring step to rank feasible nodes and select the best one.,scheduling,conceptual,intermediate
What is the difference between Scheduling Policies and Scheduling Profiles?,"Scheduling Policies use Predicates and Priorities, while Scheduling Profiles allow for more granular control using plugins for various scheduling stages.",scheduling,conceptual,advanced
How does the kube-scheduler handle multiple nodes with equal scores?,It selects one of the nodes at random.,scheduling,conceptual,intermediate
What is the purpose of the PodFitsResources filter?,It checks if a node has sufficient resources to meet a Pod's resource requests.,scheduling,conceptual,intermediate
Name three plugins available within Kubernetes Scheduling Profiles.,"Examples include QueueSort, Filter, and Score.",scheduling,conceptual,advanced
Can you manually specify a node for a Pod? When is this done?,"Yes, but it's unusual and only done in special cases.",scheduling,conceptual,intermediate
What is the significance of Pod topology spread constraints?,They ensure Pods are spread across different failure domains to improve resilience.,scheduling,conceptual,advanced
How can you configure multiple schedulers in a Kubernetes cluster?,"The documentation mentions this as a topic to learn about, indicating the existence of mechanisms to achieve this.",scheduling,conceptual,advanced
What is the importance of understanding Pod Overhead in Kubernetes scheduling?,Accounting for Pod Overhead ensures accurate resource allocation and avoids scheduling failures due to underestimated resource needs.,scheduling,conceptual,advanced
How does Kubernetes handle scheduling of Pods that utilize volumes?,"The provided text mentions Volume Topology Support, Storage Capacity Tracking, and Node-specific Volume Limits as relevant factors.",scheduling,conceptual,advanced
What is the purpose of scheduler performance tuning?,Improving the efficiency and responsiveness of the scheduling process.,scheduling,conceptual,intermediate
What is a Kubelet?,A Kubelet is an agent that runs on each node in a Kubernetes cluster and is responsible for running containers.,architecture,conceptual,beginner
What is a Kubernetes Node?,"A Node is a worker machine in a Kubernetes cluster, hosting Pods.",architecture,conceptual,beginner
What is a Kubernetes Pod?,"The smallest deployable unit in Kubernetes, containing one or more containers.",workloads,conceptual,beginner
What is the control plane in Kubernetes?,The control plane manages the cluster state and resources.,architecture,conceptual,beginner
How does Kubernetes ensure high availability?,"This is not directly answered in the source material, but high availability is generally achieved through replication and redundancy of control plane components and worker nodes.",architecture,conceptual,intermediate
What are the benefits of using a custom scheduler?,Allows for tailored scheduling logic based on specific organizational needs and application requirements.,scheduling,conceptual,advanced
How would you troubleshoot a pod that consistently fails to schedule?,"Check node resources, pod resource requests,  scheduling constraints, and relevant logs.",troubleshooting,practical,intermediate
What are the potential implications of ignoring Pod Overhead during resource allocation?,"Potential resource exhaustion, leading to scheduling failures and instability.",scheduling,conceptual,intermediate
Explain the concept of 'topology management policies' in Kubernetes.,They define rules for distributing pods across different zones and regions for high availability and fault tolerance.,scheduling,conceptual,advanced
How does kube-scheduler ensure that Pods are placed on nodes with appropriate resources?,"Through the filtering phase, which checks available resources against Pod requests and constraints.",scheduling,conceptual,intermediate
What is the primary purpose of the Kubernetes scheduler?,The Kubernetes scheduler is responsible for assigning Pods to Nodes based on various constraints and preferences.,scheduling,conceptual,beginner
Explain the difference between `nodeSelector` and `nodeAffinity` in Pod scheduling.,"`nodeSelector` is a simple, hard constraint; `nodeAffinity` provides more expressive options, including soft preferences.",scheduling,conceptual,intermediate
How does `nodeAffinity`'s `requiredDuringSchedulingIgnoredDuringExecution` differ from `preferredDuringSchedulingIgnoredDuringExecution`?,`requiredDuringSchedulingIgnoredDuringExecution` is a hard requirement; `preferredDuringSchedulingIgnoredDuringExecution` is a preference that may be ignored if no suitable node is available.,scheduling,conceptual,intermediate
What is the significance of the `weight` parameter in `preferredDuringSchedulingIgnoredDuringExecution`?,The `weight` parameter indicates the relative preference for a node; higher weights increase the likelihood of selection.,scheduling,conceptual,intermediate
Describe a scenario where using `nodeSelector` is sufficient for Pod placement.,"Deploying a Pod requiring specific hardware, like an SSD, can be handled effectively with `nodeSelector`.",scheduling,practical,beginner
Explain how `matchExpressions` and `matchFields` work within `nodeAffinity`.,"Both define criteria for node selection; `matchExpressions` use labels, while `matchFields` use node fields (not commonly used).",scheduling,conceptual,intermediate
What are the available operators for `matchExpressions` in `nodeAffinity`?,"In, NotIn, Exists, DoesNotExist, Gt, Lt.",scheduling,factual,intermediate
How can you prevent a compromised node from falsely advertising itself as suitable for specific Pods?,Use labels with the `node-restriction.kubernetes.io/` prefix and the `NodeRestriction` admission plugin.,security,practical,advanced
"What are node labels, and how are they used in Pod scheduling?","Node labels are key-value pairs that describe node characteristics, used by `nodeSelector` and `nodeAffinity` for Pod placement.",scheduling,conceptual,beginner
Why is it recommended to use labels that the kubelet cannot modify for node isolation?,To prevent compromised nodes from manipulating their labels to attract undesired workloads.,security,conceptual,intermediate
What happens if both `nodeSelector` and `nodeAffinity` are specified in a Pod specification?,"Both must be satisfied for the Pod to be scheduled.  If one is not met, the Pod will not be scheduled.",scheduling,conceptual,intermediate
Explain the concept of Pod topology spread constraints.,These constraints ensure Pods are spread across multiple failure domains (like zones or regions) for high availability.,scheduling,conceptual,intermediate
What is the purpose of `nodeName` field in a Pod specification?,"It explicitly specifies the node where the Pod should run, overriding the scheduler.",scheduling,conceptual,beginner
When is it generally preferable to use `nodeAffinity` instead of `nodeSelector`?,"When more control is needed over selection logic, such as soft preferences or more complex matching criteria.",scheduling,conceptual,intermediate
How can you achieve node anti-affinity using `nodeAffinity`?,Use the `NotIn` or `DoesNotExist` operators in `matchExpressions`.,scheduling,practical,intermediate
What is the role of the `kubelet` in node label management?,"The `kubelet` manages node labels, but it's crucial to use labels the kubelet cannot modify for security.",node,conceptual,intermediate
Explain the concept of 'soft' and 'preferred' rules in `nodeAffinity`.,"Soft or preferred rules allow scheduling even if no perfectly matching node is found, unlike hard requirements.",scheduling,conceptual,intermediate
Describe a scenario where inter-pod affinity would be beneficial.,Co-locating Pods from two services that communicate heavily to reduce latency within the same availability zone.,scheduling,practical,intermediate
"What are node taints, and how do they relate to Pod scheduling?",Node taints mark a node with specific conditions; Pods without matching tolerations will be prevented from scheduling there.,scheduling,conceptual,intermediate
What does `IgnoredDuringExecution` signify in `nodeAffinity`?,The Pod will continue running even if the node labels change after scheduling.,scheduling,conceptual,intermediate
Explain how multiple `matchExpressions` within a single `nodeSelectorTerm` are evaluated.,All expressions must be satisfied (ANDed) for the term to be considered true.,scheduling,conceptual,intermediate
How are multiple `nodeSelectorTerms` within `nodeAffinity` evaluated?,The Pod can be scheduled if at least one of the terms is satisfied (ORed).,scheduling,conceptual,intermediate
"What is the `kubernetes.io/hostname` label, and why is caution advised when relying on it?","It represents the hostname of the node, but its value can vary across different environments, making it unreliable for critical decisions.",node,conceptual,intermediate
How does the scheduler prioritize nodes when `preferredDuringSchedulingIgnoredDuringExecution` rules are present?,"It sums the weights of satisfied preferred rules, adding to the node's overall score, prioritizing higher scores.",scheduling,conceptual,advanced
What is the maximum weight value allowed for `preferredDuringSchedulingIgnoredDuringExecution`?,100,scheduling,factual,beginner
"Besides node labels, what other factors influence Pod scheduling?","Resource availability, Pod resource requests, taints and tolerations, affinity and anti-affinity rules, and quality of service (QoS) classes.",scheduling,conceptual,advanced
How can you ensure a Pod is scheduled only on nodes with specific operating systems?,Use a `nodeSelector` or `nodeAffinity` with a `matchExpressions` targeting the `kubernetes.io/os` label.,scheduling,practical,intermediate
What is the recommended approach for selecting nodes based on labels in Kubernetes?,Use label selectors within `nodeSelector` or `nodeAffinity`.,scheduling,practical,beginner
Explain a scenario where using `nodeName` for Pod assignment might be necessary.,"Manually assigning a Pod to a specific node for debugging or maintenance, although generally discouraged for production deployments.",scheduling,practical,intermediate
